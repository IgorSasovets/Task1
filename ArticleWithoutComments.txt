Створення шаблону регулярного виразу

Шаблон регулярного виразу складається зі звичайних символів, наприклад /abc/, або комбінації звичайних та 
спеціальних символів – /ab*c/ або /Chapter (\d+)\.\d*/. Останній приклад містить дужки, які використовуються 
як запам'ятовуючий пристрiй. Збіг з цією частиною шаблону запам'ятовується для подальшого використання, більш 
докладно про це можна прочитати в розділі "Використання збігів підрядків у дужках".

Використання простих шаблонів

Прості шаблони складаються з символів, для яких потрібно знайти безпосередній збіг. Наприклад, шаблон /abc/ збігається 
з комбінацією символів в рядку тільки у випадку, коли символи 'abc' опиняються поруч саме в такому порядку. Збіг буде 
вдалим в рядках "Hi, do you know your abc's?" та "The latest airplane designs evolved from slabcraft." В обох випадках 
шаблон збігається з підрядком 'abc'. В рядку 'Grab crab' збігу не буде, так як він містить підрядок 'ab c', що не 
збігається точно з підрядком 'abc'.

Використання спеціальних символів

Коли пошук збігу вимагає чогось більшого ніж безпосередній збіг, наприклад пошук одного чи більше екземплярів символу 'b', або пошуку 
пробілів, шаблон включає спеціальні символи. Так, шаблон /ab*c/ збігається з будь-якою символьною комбінацією, де за 
символом 'a' йде нуль чи більше символів 'b' (* значить 0 чи більше випадків появи попереднього елемента) за яким відразу 
йде символ 'c'. В рядку "cbbabbbbcdebc," шаблон збігається з підрядком 'abbbbc'.

Використання дужок

Дужки навколо будь-якої частини регулярного виразу означають, що ця частина рядка, який порівнюється з регулярним виразом, буде збережена. 
Після цього, ця частина рядка може бути викликана для повторного використання, більш докладно про це можна прочитати у розділі
"Використання збігів підрядків у дужках". Використання круглих дужок у шаблоні регулярного виразу призводить до того, що
програма запам'ятовує відповідний збіг, який вказаний у дужках. Наприклад, шаблон /a(b)c/ передбачає пошук 
набору символів 'abc' і запам'ятовування символу 'b'. 

Наприклад, шаблон /Chapter (\d+)\.\d*/ показує додатково екрановані та спеціальні символи частини шаблону, яку
 потрібно запам?ятати. Він відповідає точному збігу слова 'Chapter ' за яким йде один чи більше цифрових символів (\d означає 
 будь-який цифровий символ, а + означає 1 чи більше разів), за якими йде десяткова точка (яка сама по собі є спеціальним символом; 
 додавання слеша \ перед точкою дозволяє зробити її звичайним символом '.'), за якою йде будь-яке число, що повторюється
 від 0 та більше разів (\d означає числовий символ, * означає 0 та більше разів). На додачу, дужки використовуються для того, щоб 
 запам?ятати першу послідовність числових символів.

Цей шаблон в рядку "Open Chapter 4.3, paragraph 6" знайде числовий символ '4' та запам?ятає його. Шаблон не знайде 
збігів в "Chapter 3 and 4", тому що рядок не містить точку після '3'.

Для пошуку відповідності підрядка в дужках без його запам?ятовування. додавайте на початку шаблона в дужках 
комбінацію ?:. Наприклад, (?:\d+) відповідає одному чи білше числовому символу але без їх запам?ятовування.

Робота з регулярними виразами
Regular expressions are used with the RegExp methods test and exec and with the String methods match, replace, 
search, and split. These methods are explained in detail in the JavaScript reference.

Methods that use regular expressions
Method	Description
exec	A RegExp method that executes a search for a match in a string. It returns an array of information.
test	A RegExp method that tests for a match in a string. It returns true or false.
match	A String method that executes a search for a match in a string. It returns an array of information or null on a mismatch.
search	A String method that tests for a match in a string. It returns the index of the match, or -1 if the search fails.
replace	A String method that executes a search for a match in a string, and replaces the matched substring with a replacement substring.
split	A String method that uses a regular expression or a fixed string to break a string into an array of substrings.